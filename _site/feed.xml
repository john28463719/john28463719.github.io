<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-03-07T15:37:41+08:00</updated><id>http://localhost:4000//</id><title type="html">JohnWu Blog</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">從網路上下載ipa檔並且安裝在iPhone or iPad(Download and install an ipa from url on iOS)</title><link href="http://localhost:4000/2017/03/07/install-ipa-from-url.html" rel="alternate" type="text/html" title="從網路上下載ipa檔並且安裝在iPhone or iPad(Download and install an ipa from url on iOS)" /><published>2017-03-07T00:00:00+08:00</published><updated>2017-03-07T00:00:00+08:00</updated><id>http://localhost:4000/2017/03/07/install-ipa-from-url</id><content type="html" xml:base="http://localhost:4000/2017/03/07/install-ipa-from-url.html">&lt;p&gt;原本這篇要介紹GoogleMobileVision，不過這為了自己要記錄，所以請原諒我的自私，然後這關鍵字真的不好下，所以我加上英文希望大家可以搜尋的到中文版教學。&lt;/p&gt;

&lt;h3 id=&quot;stack-overflow發問原網址&quot;&gt;stack overflow發問原網址&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/23561370/download-and-install-an-ipa-from-url-on-ios&quot;&gt;Download and install an ipa from url on iOS&lt;/a&gt; 上面的解法必須要有自己的server並且要申請ssh，因為.plist檔規定只能放在https底下，另外他也有介紹可以放置在dropbox那就方便許多，至於放置dropbox該如何放置他只有粗略介紹，像我這種初心者是看不太懂的，所以以下介紹使用dropbox的方法&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;stack-overflow發問原網址dropbox&quot;&gt;stack overflow發問原網址(Dropbox)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/26042508/over-the-air-ota-ios-ipa-file-distribution-for-public&quot;&gt;Over The Air (OTA) iOS IPA File Distribution For Public?&lt;/a&gt;這篇有詳細介紹如何把.plist檔放上dropbox&lt;/p&gt;

&lt;h3 id=&quot;開始&quot;&gt;開始&lt;/h3&gt;
&lt;p&gt;前情提要上面都很清楚地介紹了，需要檔案有三&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;.ipa(ad-Hoc)&lt;/li&gt;
  &lt;li&gt;.plist&lt;/li&gt;
  &lt;li&gt;index.html&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用&lt;a href=&quot;http://www.hanchorllc.com/2010/08/24/introducing-ios-beta-builder/&quot;&gt;BetaBuilder&lt;/a&gt;創建index.html以及manifest.plist。&lt;a href=&quot;https://s3-ap-southeast-1.amazonaws.com/problem-arc/Beta-Builder/BetaBuilder.zip&quot;&gt;BetaBuilder下載&lt;/a&gt;
&lt;img src=&quot;/img/post/2017-03-07-install-ipa-from-url/betaBuilder.png&quot; style=&quot;width: 200px; height: 300px;&quot; /&gt;
輸入的網址是待會你要把產生出的index.html及manifest.plist以及ipa檔上傳的位置例如&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://myWeb.com/MY_TEST_APP
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Generate後他會自己產生index.html以及manifest.plist&lt;/p&gt;

&lt;h4 id=&quot;正常版&quot;&gt;正常版&lt;/h4&gt;
&lt;p&gt;index.html&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;itms-services://?action=download-manifest&amp;amp;url=https://myWeb.com/MY_TEST_APP/manifest.plist&quot;&amp;gt;Install App&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;manifest.plist&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;items&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;assets&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;software-package&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;url&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;http://YOUR_SERVER_URL/YOUR-IPA-FILE.ipa&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;metadata&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;bundle-identifier&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;com.yourCompany.productName&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;bundle-version&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;1.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;software&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;YOUR APP NAME&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;把ipa,.plist,index.html上傳就完成了～&lt;/p&gt;

&lt;h4 id=&quot;dropbox版&quot;&gt;Dropbox版&lt;/h4&gt;
&lt;p&gt;正常版我們是使用以下網址&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://myWeb.com/MY_TEST_APP
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;會使用Dropbox都是因為沒有申請網站的ssh所以只有http，所以我們的網址應該會變這樣&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://myWeb.com/MY_TEST_APP
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;這邊你的ipa可以放在你自己的網站或是dropbox，都可以&lt;br /&gt;
如果我的ipa檔是放在&lt;a href=&quot;&quot;&gt;http://myWeb.com/MY_TEST_APP&lt;/a&gt;底下&lt;br /&gt;
那manifest.plist就會跟正常版長一樣&lt;br /&gt;
manifest.plist&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;items&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;assets&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;software-package&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;url&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;http://YOUR_SERVER_URL/YOUR-IPA-FILE.ipa&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;metadata&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;bundle-identifier&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;com.yourCompany.productName&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;bundle-version&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;1.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;kind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;software&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;YOUR APP NAME&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;OK，可以把manifest.plist上傳到dropbox了&lt;/p&gt;
&lt;h5 id=&quot;修改index&quot;&gt;修改index&lt;/h5&gt;
&lt;p&gt;需要修改的會是index.html&lt;br /&gt;
上傳manifest.plist檔後，從dropbox分享出manifest.plist的網址，大概長以下這樣&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://www.dropbox.com/s/5lcnp2lhrefawv7/manifest.plist?dl=0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;修改成&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://dl.dropbox.com/s/5lcnp2lhrefawv7/manifest.plist
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;所以最後我們的index會變成&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;itms-services://?action=download-manifest&amp;amp;url=https://dl.dropbox.com/s/5lcnp2lhrefawv7/manifest.plist&quot;&amp;gt;Install App&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修該完成就把index.html上傳至自己的server吧。
這部分我只有manifest.plist檔案在dropbox上，剩下的ipa以及index.html都在自己server上。&lt;/p&gt;

&lt;h3 id=&quot;分享你的indexhtml&quot;&gt;分享你的index.html&lt;/h3&gt;
&lt;p&gt;最後就給別人index.html的網址，但必須要在手機上開啟才能夠下載安裝&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;結語&quot;&gt;結語&lt;/h3&gt;
&lt;p&gt;如果是個人帳號包出的ad-hoc的話必須要註冊硬體id才能夠安裝，企業帳號的話就隨便安裝。&lt;br /&gt;
流程是這樣的index.html-&amp;gt;manifest.plist-&amp;gt;.ipa&lt;/p&gt;</content><author><name>John Wu</name></author><category term="iOS" /><category term="ipa" /><summary type="html">原本這篇要介紹GoogleMobileVision，不過這為了自己要記錄，所以請原諒我的自私，然後這關鍵字真的不好下，所以我加上英文希望大家可以搜尋的到中文版教學。</summary></entry><entry><title type="html">Face Detector 臉部辨識(CIDetector)</title><link href="http://localhost:4000/2017/02/24/face-detector.html" rel="alternate" type="text/html" title="Face Detector 臉部辨識(CIDetector)" /><published>2017-02-24T00:00:00+08:00</published><updated>2017-02-24T00:00:00+08:00</updated><id>http://localhost:4000/2017/02/24/face-detector</id><content type="html" xml:base="http://localhost:4000/2017/02/24/face-detector.html">&lt;p&gt;2月初在研究臉部辨識的framework，很廢的我現在才發現有原生的接下來來介紹如何使用基本的CIDetector。&lt;/p&gt;

&lt;h3 id=&quot;cidetector介紹&quot;&gt;CIDetector介紹&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/reference/coreimage/cidetector&quot;&gt;CIDetector&lt;/a&gt; 先給你看一下他的官方文件，CIDetector前綴字是CI所以很明顯的他是吃Core Image，跟我們平常使用的UIImage有點不同，稍後會介紹。&lt;/p&gt;

&lt;p&gt;官方說明&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A CIDetector object uses image processing to search for and identify notable features (faces, rectangles, and barcodes) in a still image or video. Detected features are represented by CIFeature objects that provide more information about each feature.
This class can maintain many state variables that can impact performance. So for best performance, reuse CIDetector instances instead of creating new ones.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;介紹uikit與coreimage&quot;&gt;介紹UIKit與CoreImage&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Core Image和UIKit使用的是2種不同的座標系統請見下圖(截自網路）。所以稍後我們必須轉換兩者座標系統。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2017-02-24-face-detector/UIKitCoreImage.png&quot; style=&quot;width: 400px;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;開始&quot;&gt;開始&lt;/h3&gt;
&lt;p&gt;這篇教學我透過手機攝像頭擷取影像，並且即時抓出你臉部位置，如果只是要偵測圖像的話也可以參考我這邊，省掉攝像頭那部分。
&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;初始化cidetector&quot;&gt;初始化CIDetector&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private func initialDetector(){
    let accuracy = [CIDetectorAccuracy : CIDetectorAccuracyHigh as AnyObject]
    faceDetector = CIDetector(ofType: CIDetectorTypeFace, context: nil, options: accuracy)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;設置session-input&quot;&gt;設置Session Input&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   private func setupSession(){
        let desiredPosition = isFrontCam! ? AVCaptureDevicePosition.front : AVCaptureDevicePosition.back
        let device = self.cameraPosition(position: desiredPosition)
        var deviceInput: AVCaptureDeviceInput?
        do{
            deviceInput = try AVCaptureDeviceInput(device: device)
        }catch{
            print(error)
        }
        session.sessionPreset = AVCaptureSessionPresetHigh
        session.addInput(deviceInput)
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;設置camera-preview&quot;&gt;設置Camera Preview&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    private func setupCameraPreview(){
        previewLayer = AVCaptureVideoPreviewLayer(session: session)
        previewLayer?.frame = captureImage.bounds
        previewLayer?.videoGravity = AVLayerVideoGravityResizeAspectFill
        captureImage.layer.addSublayer(previewLayer!)
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;設置session-output&quot;&gt;設置Session Output&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    private func setupSessionOutput(){
        self.videoOutput = AVCaptureVideoDataOutput()
        self.videoOutput!.videoSettings = [kCVPixelBufferPixelFormatTypeKey as AnyHashable: Int(kCVPixelFormatType_32BGRA)]
        self.videoOutput?.alwaysDiscardsLateVideoFrames = true
        self.videoOutputQueue = DispatchQueue(label: &quot;videoOutputQueue&quot;)
        self.videoOutput?.setSampleBufferDelegate(self, queue: self.videoOutputQueue)
        session.addOutput(videoOutput)
        session.startRunning()
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;截取output&quot;&gt;截取Output&lt;/h3&gt;
&lt;p&gt;基本設置完後，要開始擷取攝像頭的Output，調用captureOutput函式要拿到CMSampleBuffer媒體數據轉換成我們需要的圖檔&lt;/p&gt;

&lt;h4 id=&quot;接取session-output&quot;&gt;接取Session Output&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    func captureOutput(_ captureOutput: AVCaptureOutput!, didOutputSampleBuffer sampleBuffer: CMSampleBuffer!, from connection: AVCaptureConnection!) {
        autoreleasepool {
            connection.videoOrientation = AVCaptureVideoOrientation.portrait
            connection.isVideoMirrored = isFrontCam!
            let imageBuffer = CMSampleBufferGetImageBuffer(sampleBuffer)
            let opaqueBuffer = Unmanaged&amp;lt;CVImageBuffer&amp;gt;.passUnretained(imageBuffer!).toOpaque()
            let pixelBuffer = Unmanaged&amp;lt;CVPixelBuffer&amp;gt;.fromOpaque(opaqueBuffer).takeUnretainedValue()
            let sourceImage = CIImage(cvImageBuffer: pixelBuffer, options: nil)
            let options = [CIDetectorSmile : true as AnyObject, CIDetectorEyeBlink: true as AnyObject, CIDetectorImageOrientation : 1 as AnyObject]
            let faces = faceDetector?.features(in: sourceImage, options: options) as? [CIFaceFeature]
            if faces?.count != 0 {
                let viewSize = captureImage.bounds.size
                let ciImageSize = sourceImage.extent.size
     			let scaleX = viewSize.width / ciImageSize.width
                let scaleY = viewSize.height / ciImageSize.height
                let offsetX = (viewSize.width - ciImageSize.width * scaleX) / 2
                let offsetY = (viewSize.height - ciImageSize.height * scaleY) / 2
                for face in faces!{
                    DispatchQueue.main.sync {
                        var facebound = face.bounds.applying(coreImage2UIviewTransform(ciImage: sourceImage))
                        facebound = facebound.applying(CGAffineTransform(scaleX: scaleX, y: scaleY))
                        facebound.origin.x += offsetX
                        facebound.origin.y += offsetY
                        faceBound?.faceLocal = facebound
                    }
                }
            }
        }
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/reference/coreimage/cidetector/feature_detection_keys&quot;&gt;Feature Detection Option&lt;/a&gt;官網有option的解說&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CIDetectorImageOrientation為1代表portrait&lt;/li&gt;
  &lt;li&gt;ciImageSize為攝像頭拍攝出的圖像size，所以sessionPreset設為多少這邊size就為多少&lt;/li&gt;
  &lt;li&gt;接著我們要計算圖片與螢幕的縮放大小，所以是viewSize / ciImageSize （前者為螢幕大小，後者為圖片大小）&lt;/li&gt;
  &lt;li&gt;得到face的bounds後，實作coreImage轉換至UIKit的座標並且縮放face的bounds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;再看一次
&lt;img src=&quot;/img/post/2017-02-24-face-detector/UIKitCoreImage.png&quot; style=&quot;width: 400px;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;轉換座標的函式&quot;&gt;轉換座標的函式&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    private func coreImage2UIviewTransform(ciImage: CIImage) -&amp;gt; CGAffineTransform{
        let ciImagesize = ciImage.extent.size
        var transform = CGAffineTransform(scaleX: 1, y: -1)
        transform = transform.translatedBy(x: 0, y: -ciImagesize.height)
        return transform
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;完成&quot;&gt;完成&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/reference/coreimage/cifacefeature&quot;&gt;CIFaceFeature&lt;/a&gt;官方文件
這邊有相關的資料，可以抓取眼睛耳朵嘴巴諸如此類的，然後試用後感覺有些慢，沒像原生的照相機這麼快，不知道是不是我寫的問題
，下一篇會介紹GoogleMobileVision的臉部辨識，功能更強大了些。&lt;/p&gt;</content><author><name>John Wu</name></author><category term="iOS" /><category term="Google" /><category term="FaceDetector" /><category term="Camera" /><summary type="html">2月初在研究臉部辨識的framework，很廢的我現在才發現有原生的接下來來介紹如何使用基本的CIDetector。</summary></entry><entry><title type="html">Web加上Disqus留言功能</title><link href="http://localhost:4000/2017/01/17/disqus-comment.html" rel="alternate" type="text/html" title="Web加上Disqus留言功能" /><published>2017-01-17T00:00:00+08:00</published><updated>2017-01-17T00:00:00+08:00</updated><id>http://localhost:4000/2017/01/17/disqus-comment</id><content type="html" xml:base="http://localhost:4000/2017/01/17/disqus-comment.html">&lt;p&gt;既前篇簡單架設自己網站後，現在要內遷一個&lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt;留言功能&lt;/p&gt;

&lt;h3 id=&quot;先註冊一個disqus帳號&quot;&gt;先註冊一個Disqus帳號&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://help.disqus.com/customer/portal/articles/472097-universal-embed-code&quot;&gt;Universal Embed Code官方教學&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;選擇disqus內遷平台&quot;&gt;選擇Disqus內遷平台&lt;/h3&gt;
&lt;p&gt;我先創了一個叫做johnwu的Disqus site
下圖為選擇內遷的平台，繼上篇我是利用jeklly+github page製作的網站，等於是自寫網站，所以選擇最下面那個&lt;code class=&quot;highlighter-rouge&quot;&gt;I don't see my platfotm...&lt;/code&gt;
&lt;img src=&quot;/img/post/2017-01-17-disqus-comment/disqus-platform.png&quot; style=&quot;width: 800px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因為我創建johnwu的site所以&lt;code class=&quot;highlighter-rouge&quot;&gt;s.src = '//johnwu.disqus.com/embed.js';&lt;/code&gt;這裡要為自己的名稱，完整程式碼如下
複製貼上到自己的post畫面就好了&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div id=&quot;disqus_thread&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;

/**
*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/
/*
var disqus_config = function () {
this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
};
*/
(function() { // DON'T EDIT BELOW THIS LINE
var d = document, s = d.createElement('script');
s.src = '//johnwu.disqus.com/embed.js';
s.setAttribute('data-timestamp', +new Date());
(d.head || d.body).appendChild(s);
})();
&amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;修改disqus的trusted-domains&quot;&gt;修改Disqus的Trusted Domains&lt;/h3&gt;
&lt;p&gt;以上客戶端都完成了，剩下的就是Disqus的後端，登入自己的&lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt;並且進入Admin模式&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;點選navigation的setting選單&lt;/li&gt;
  &lt;li&gt;下滑至Trusted Domains&lt;/li&gt;
  &lt;li&gt;新增自己網站的domain
&lt;img src=&quot;/img/post/2017-01-17-disqus-comment/disqus-domain.png&quot; style=&quot;width: 800px;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;完成&quot;&gt;完成&lt;/h3&gt;
&lt;p&gt;看看自己網站有沒有留言功能吧，如果創建了很多sites記得要去Disqus(Admin)確定哪個是上線的，才能確保有遷入成功。&lt;/p&gt;</content><author><name>John Wu</name></author><category term="Web" /><category term="Disqus" /><category term="javascript" /><summary type="html">既前篇簡單架設自己網站後，現在要內遷一個Disqus留言功能</summary></entry><entry><title type="html">Jekyll + Github page 架設簡單個人網站(Mac)</title><link href="http://localhost:4000/2017/01/11/jekyll+github-page.html" rel="alternate" type="text/html" title="Jekyll + Github page 架設簡單個人網站(Mac)" /><published>2017-01-11T00:00:00+08:00</published><updated>2017-01-11T00:00:00+08:00</updated><id>http://localhost:4000/2017/01/11/jekyll+github-page</id><content type="html" xml:base="http://localhost:4000/2017/01/11/jekyll+github-page.html">&lt;p&gt;本篇記錄如何使用Github page + Jekyll建置網站，如果對網頁有粗淺認識並且想架設自己的部落格的人希望本篇對你有些幫助&lt;/p&gt;

&lt;h3 id=&quot;jekyll介紹&quot;&gt;Jekyll介紹&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; 是一個Open Source的靜態網站產生框架，他會根據網頁原碼生成靜態網站。提供了模板，套件等功能。（Jekyll是基于Ruby的程序）&lt;/p&gt;

&lt;p&gt;官方說明&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages, which you can use to host sites right from your GitHub repositories.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;github-page介紹&quot;&gt;Github page介紹&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;Github page&lt;/a&gt; 可以把你的網站建置在github上，非常的方便且簡單操作。就是一個簡單的靜態網站託管。&lt;/p&gt;

&lt;h3 id=&quot;開始&quot;&gt;開始&lt;/h3&gt;

&lt;h4 id=&quot;新建new-repository&quot;&gt;新建new repository&lt;/h4&gt;
&lt;p&gt;申請Github帳號，新建new repository，然後為我們新建的repository命名，命名需要遵循規則：username/username.github.io。
username這邊是你的帳號名稱&lt;/p&gt;

&lt;h4 id=&quot;clone-到自己本地端&quot;&gt;clone 到自己本地端&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir MyWebsite
cd MyWebsite
git clone https://github.com/username/username.github.io
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;安裝jekyll&quot;&gt;安裝Jekyll&lt;/h4&gt;
&lt;p&gt;下面是我有使用到的套件，如果有缺其它套件再安裝就好，Mac自帶ruby所以就不用再安裝ruby，更新一下就好，確保為最新版本，因為本人是OSX 10.11所以上網查了一下需要這樣&lt;a href=&quot;http://stackoverflow.com/questions/31567029/how-can-i-install-jekyll-on-osx-10-11&quot;&gt;安裝&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OSX 10.11以上&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem update ruby
sudo gem install -n /usr/local/bin/ jekyll
sudo gem install -n /usr/local/bin/ bundler
sudo gem install -n /usr/local/bin/ rdiscount
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;OSX 10.11以下&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem update ruby
sudo gem install jekyll
sudo gem install bundler
sudo gem install rdiscount
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;使用jekyll&quot;&gt;使用Jekyll&lt;/h4&gt;
&lt;p&gt;Jekyll有個好處就是有自帶虛擬伺服器，可以在本地端測試，先創建新的專案，在本地端測試執行。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new MyBlog
cd MyBlog
jekyll server
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;成功的話會顯示在這網址 http://127.0.0.1:4000/&lt;/p&gt;

&lt;h4 id=&quot;jekyll目錄結構&quot;&gt;Jekyll目錄結構&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
├── _config.yml
├── _data
|   └── members.yml
├── _drafts
|   ├── begin-with-the-crazy-ideas.md
|   └── on-simplicity-in-technology.md
├── _includes
|   ├── footer.html
|   └── header.html
├── _layouts
|   ├── default.html
|   └── post.html
├── _posts
|   ├── 2007-10-29-why-every-programmer-should-play-nethack.md
|   └── 2009-04-26-barcamp-boston-4-roundup.md
├── _sass
|   ├── _base.scss
|   └── _layout.scss
├── _site
├── .jekyll-metadata
└── index.html 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;config.yml:配置文件，主要用於設置基本訊息。&lt;/li&gt;
  &lt;li&gt;_includes:存放可覆用的模組，&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;% include foot.html %&lt;/code&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;調用。&lt;/li&gt;
  &lt;li&gt;_layouts:html存放位置。&lt;/li&gt;
  &lt;li&gt;_posts:文章名稱必須(年-月-日-文章名稱)照著規則命名。&lt;/li&gt;
  &lt;li&gt;_site:jekyll生成的檔案，可以放在.gitignore文件中忽略他。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;完成&quot;&gt;完成&lt;/h3&gt;

&lt;h4 id=&quot;jekyllgithub-page&quot;&gt;Jekyll+Github page&lt;/h4&gt;
&lt;p&gt;剛剛新建專案跟他目錄結構相比少了很多東西，你可以到&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;Jekyll Theme&lt;/a&gt;下載你喜歡的主題，或者你可以上github找找其他人的網站clone下來再做修改，我是利用&lt;a href=&quot;https://github.com/Huxpro/huxpro.github.io&quot;&gt;Hux大大&lt;/a&gt;做修改。&lt;br /&gt;
接著把Jekyll的專案複製貼上到你剛從github clone下來的username.github.io資料夾&lt;/p&gt;

&lt;h4 id=&quot;push-to-github&quot;&gt;push to Github&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;push 到 github master就完成囉&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add --all
git commit -m &quot;Initial commit&quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;接著開啟瀏覽器輸入username.github.io網址，就可以看到你自己的專屬網站囉～
username一樣是你githhub上的帳號&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;custom-domain&quot;&gt;Custom Domain&lt;/h3&gt;
&lt;p&gt;我是申請&lt;a href=&quot;https://www.godaddy.com/&quot;&gt;Godaddy&lt;/a&gt;的網域，所以這裡透過Godaddy介紹如何設置自己的網域。&lt;/p&gt;

&lt;h4 id=&quot;godaddy網域設置&quot;&gt;GoDaddy網域設置&lt;/h4&gt;
&lt;p&gt;找到自己喜歡的網域，申請完後，進入自己帳號後,點選Manage 
&lt;img src=&quot;/img/post/2017-01-11-Jekyll+Github-page/godaddy-manage.png&quot; style=&quot;width: 800px;&quot; /&gt;
再點選自己的domain name
&lt;img src=&quot;/img/post/2017-01-11-Jekyll+Github-page/godaddy-domain.png&quot; style=&quot;width: 800px;&quot; /&gt;
設置Host A，192.30.252.154也可以
&lt;img src=&quot;/img/post/2017-01-11-Jekyll+Github-page/godaddy-detail-A.png&quot; style=&quot;width: 800px;&quot; /&gt;
設置CNAME，在www的位置把Points To改成自己github的專案網址
&lt;img src=&quot;/img/post/2017-01-11-Jekyll+Github-page/godaddy-detail-CName.png&quot; style=&quot;width: 800px;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;github上的設置&quot;&gt;Github上的設置&lt;/h4&gt;
&lt;p&gt;到自己專案目錄下點選setting
&lt;img src=&quot;/img/post/2017-01-11-Jekyll+Github-page/github-setting.png&quot; style=&quot;width: 800px;&quot; /&gt;
在Custom domain那邊輸入你剛申請的網域名稱
&lt;img src=&quot;/img/post/2017-01-11-Jekyll+Github-page/github-github-page.png&quot; style=&quot;width: 800px;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;用自己網域開啟個人網站看看吧&quot;&gt;用自己網域開啟個人網站看看吧&lt;/h4&gt;
&lt;p&gt;GoDaddy那邊設置可能沒這麼快可以完成，設定完要記得儲存並且稍等一下，因為他伺服器要處理，如果都設置好就可以使用自己的網域開啟個人網站囉～&lt;/p&gt;</content><author><name>John Wu</name></author><category term="Web" /><category term="Jekyll" /><category term="Github" /><summary type="html">本篇記錄如何使用Github page + Jekyll建置網站，如果對網頁有粗淺認識並且想架設自己的部落格的人希望本篇對你有些幫助</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2017/01/10/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-01-10T17:10:54+08:00</published><updated>2017-01-10T17:10:54+08:00</updated><id>http://localhost:4000/jekyll/update/2017/01/10/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/01/10/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><category term="Web" /><category term="Jekyll" /><category term="Github" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>
